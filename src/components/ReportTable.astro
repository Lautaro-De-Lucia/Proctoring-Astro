---
// Props: reports (the list of report objects)
const { reports } = Astro.props;
const { exam_name } = Astro.props;
import Cell from './Cell.astro';

// Assuming 'student' is the key for the student's email in the report objects
// and it should not be treated as a test result.
const testKeys = reports.length > 0 ? Object.keys(reports[0]).filter(key => key !== 'student') : [];
---

<div class="table-container">
    <table>
      <thead>
        <tr>
          <th>student</th> <!-- Always include the student email column -->
          {testKeys.map((testName) => (
            <th key={testName}>{testName}</th>
          ))}
        </tr>
      </thead>
      <tbody>
        {reports.map((report, index) => (
          <tr key={index}>
            <td>{report.student}</td> <!-- Directly render the student email -->
            {testKeys.map((testName) => (
                <Cell key={testName}
                    value={report[testName]}
                    test={testName}
                    studentEmail={report.student}
                    examName={exam_name} />
                ))}
          </tr>
        ))}
      </tbody>
    </table>
</div>

<style>

.table-container {
  display: flex;
  justify-content: center;
  width: 100%;
  margin-top: 20px;
  animation: slideIn 0.5s ease-out, fadeIn 0.5s ease-out;
}

table {
  border-collapse: separate;
  border-spacing: 0;
  min-width: 50%;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  animation: slideIn 0.5s ease-out, fadeIn 0.5s ease-out;
}

th, td {
  border-right: 1px solid #dee2e6;
  border-bottom: 1px solid #dee2e6;
  padding: 10px 15px;
  width: 120px; /* Fixed width for all cells */
  min-width: 120px; /* Minimum width for all cells */
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  font-weight: bold; /* Make all text bold */
}

th:first-child, td:first-child {
  border-left: 1px solid #dee2e6;
}

th {
  background-color: #007BFF;
  color: white;
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

td {
  background-color: white;
  color: #333;
}

td:hover {
  transform: scale(1.05);
  box-shadow: 0 0 10px white; /* Halo effect on hover */
}

@keyframes slideIn {
  from {
    transform: translateY(50px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}


</style>
